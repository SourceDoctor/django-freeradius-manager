# Generated by Django 3.0.5 on 2020-04-11 14:15

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_freeradius', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractIdentityAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Indirizzo')),
                ('locality_name', models.CharField(blank=True, max_length=135, null=True, verbose_name='Località')),
                ('state', models.CharField(blank=True, max_length=60, null=True, verbose_name='Comune')),
                ('postal_code', models.CharField(blank=True, max_length=60, null=True, verbose_name='Cap')),
                ('country_name', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Nazione')),
                ('note', models.TextField(blank=True, max_length=768, null=True)),
                ('primary', models.BooleanField(default=False, verbose_name='Recapito principale')),
            ],
            options={
                'verbose_name_plural': 'Address book',
                'ordering': ['primary'],
            },
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='tecnologia usata se email, telefono...', max_length=12, unique=True)),
                ('description', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='AttributeProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(help_text='', max_length=256)),
                ('url', models.CharField(help_text='', max_length=512)),
                ('json_config', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('personal_title', models.CharField(blank=True, max_length=12, null=True)),
                ('name', models.CharField(help_text='Nome o ragione sociale', max_length=256)),
                ('surname', models.CharField(max_length=135)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(blank=True, max_length=135, null=True)),
                ('common_name', models.CharField(blank=True, help_text='Nome o ragione sociale', max_length=256, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, help_text='nazionalità, cittadinanza', max_length=2)),
                ('city', models.CharField(blank=True, help_text='residenza', max_length=128, null=True)),
                ('codice_fiscale', models.CharField(blank=True, max_length=16, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.TextField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'verbose_name_plural': 'Identità digitali',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='IdentityThirdPartiesAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('attribute_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.AttributeProvider')),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityRadiusAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(blank=True, default=uuid.uuid4, help_text='https://guest.unical.it/identity/radius_renew/$token', null=True, unique=True)),
                ('sent', models.BooleanField(default=False)),
                ('valid_until', models.DateTimeField()),
                ('used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
                ('radius_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_freeradius.RadiusCheck')),
            ],
            options={
                'verbose_name': 'radius secret reset token',
                'verbose_name_plural': 'radius secret reset tokens',
            },
        ),
        migrations.CreateModel(
            name='IdentityDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('value', models.CharField(help_text='mario.rossi@yahoo.it oppure 02 3467457, in base al tipo', max_length=135)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.AddressType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityAffilitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('faculty', 'faculty'), ('student', 'student'), ('staff', 'staff'), ('alum', 'alum'), ('member', 'member'), ('affiliate', 'affiliate'), ('employee', 'employee'), ('library-walk-in', 'library-walk-in')], max_length=32)),
                ('origin', models.CharField(blank=True, default='unical', help_text='istitution of orgin, where the guest came from', max_length=254)),
                ('description', models.TextField(blank=True, default='')),
                ('identity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
        ),
        migrations.CreateModel(
            name='IdentityAddress',
            fields=[
                ('abstractidentityaddress_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='identity.AbstractIdentityAddress')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('identity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Identity')),
            ],
            options={
                'verbose_name_plural': 'Addresses',
                'ordering': ['primary'],
            },
            bases=('identity.abstractidentityaddress', models.Model),
        ),
    ]
